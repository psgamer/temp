@import "variables";

// =============================================
//Таблица Содержания
//
// 1. Медиа запросы
// 2. input Placeholder
// 3. Подключение шрифтов
// =============================================

// 1. Медиа запросы
// ---------------------------------------------
@mixin min-xs() {
    @media only screen and (min-width : #{$screen-xs}) {
        @content;
    }
}
@mixin min-sm() {
    @media only screen and (min-width : #{$screen-sm}) {
        @content;
    }
}
@mixin min-md() {
    @media only screen and (min-width : #{$screen-md}) {
        @content;
    }
}
@mixin min-lg() {
    @media only screen and (min-width : #{$screen-lg}) {
        @content;
    }
}

/*==========  Desktop First Method  ==========*/
@mixin max-xs() {
    @media only screen and (max-width : #{$screen-xs}) {
        @content;
    }
}
@mixin max-sm() {
    @media only screen and (max-width : #{$screen-sm}) {
        @content;
    }
}
@mixin max-md() {
    @media only screen and (max-width : #{$screen-md}) {
        @content;
    }
}
@mixin max-lg() {
    @media only screen and (max-width : #{$screen-lg}) {
        @content;
    }
}

// 2. input Placeholder
// ---------------------------------------------
@mixin placeholder() {
    &::-webkit-input-placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
}

// 3. Подключение шрифтов
// ---------------------------------------------
// String Replace / Функция для работы font-face mixin
@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// Mixin Font Face
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_")
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype"
    );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}